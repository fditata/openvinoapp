{"version":3,"sources":["assets/images/website-logo.png","i18n.js","services/auth.service.js","services/qr.service.js","components/Login.js","components/Register.js","services/auth-header.js","services/user.service.js","Web3Client.js","components/Home.js","components/Profile.js","services/experience.service.js","components/UserBoard.js","components/ModBoard.js","components/AdminBoard.js","components/NewExperience.js","components/EditProfile.js","components/SingleExperience.js","components/ForgotPassword.js","components/UpdatePassword.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","i18n","use","LanguageDetector","init","resources","en","translations","Login","Register","Email","Password","Birthdate","Nationality","es","fr","Tastings","Date","Token","Actions","Profile","Update","cat","pr","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","API_URL","email","password","axios","post","response","data","loginResponse","token","localStorage","setItem","JSON","stringify","user","removeItem","firstName","lastName","address","birthDate","telegramId","walletAddress","userId","birthday","patch","resetkey","confirmPassword","put","parse","getItem","qrValue","get","then","allowClaim","undefined","required","value","className","role","i18next","t","props","handleLogin","bind","onChangeEmail","onChangePassword","state","loading","message","currentUser","userReady","qrService","getallowClaim","getQRClaimed","AuthService","getCurrentUser","currentToken","getToken","this","setState","e","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","login","history","push","window","location","reload","error","resMessage","toString","onSubmit","ref","c","htmlFor","type","name","onChange","validations","href","style","color","disabled","display","Component","withRouter","isEmail","qrCode","vpassword","handleRegister","onChangeFirstName","onChangeLastName","onChangeAddress","onChangeBirthDate","onChangeTelegramId","onChangeWalletAddress","successful","console","log","register","selected","authHeader","Authorization","selectedAccount","SimpleCollectible","headers","Home","content","checkQR","match","params","id","qrValid","UserService","getPublicContent","redirect","to","address_1","pUserId","experienceId","ipfsUrl","catch","statusId","date","photoFileName","nftGenerated","questions","answers","question1","answer1","question2","answer2","question3","answer3","question4","answer4","question5","answer5","token_uri","isInitialized","a","provider","ethereum","request","method","accounts","err","on","web3","Web3","eth","net","getId","networkId","Contract","NFTContractBuild","abi","addressCon","mintToken","methods","safeMint","send","from","switchNetwork","chainId","BoardUser","create","experiences","currentExperiences","minted","ExperienceService","getExperiences","getUserBoard","index","url","replace","finalURL","tx","updateExperience","listItems","map","item","key","wine","tabIndex","onClick","createCollectible","scope","BoardModerator","getModeratorBoard","BoardAdmin","getAdminBoard","client","NewExperience","handleChange","event","handleSubmit","addExperience","status","arrQuestions","getQuestions","arrAnswers","saveQuestions","uno","dos","tres","cuatro","cinco","str","slice","description","image","toIPFS","file","add","added","path","ipfsUrlJson","updateJSON","onChangeFile","latitude","longitude","qRCodeClaim","navigator","geolocation","getCurrentPosition","success","coords","files","accept","alt","src","width","Fragment","fontSize","fontWeight","lineHeight","marginTop","React","EditProfile","handleUpdate","onChangeBirthday","onChangeTelegram","placeholder","SingleExperience","substring","substr","ForgotPassword","resetPassword","UpdatePassword","onChangeConfirmPassword","searchParams","search","URLSearchParams","reset","updatePassword","App","newlang","prevState","changeLanguage","logOut","redirectTimeout","showModeratorBoard","showAdminBoard","test","logout","lng","logo","username","exact","component","withTranslation","Boolean","hostname","ReactDOM","render","I18nextProvider","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.837803c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/website-logo.3e59f293.png\";","import i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\ni18n.use(LanguageDetector).init({\n  // we init with resources\n  resources: {\n    en: {\n      translations: {\n        \"Coming Soon\": \"Coming Soon\",\n        Login: \"Login\",\n        Register: \"Register\",\n        \"You Drink it, You Own it!\": \"You Drink it, You Own it!\",\n        Email: \"Email\",\n        Password: \"Password\",\n        \"Forgot Password?\": \"Forgot Password?\",\n        \"This field is required!\": \"This field is required!\",\n        \"Register to continue!\": \"Register to continue!\",\n        \"Fist Name\": \"Fist Name\",\n        \"Last Name\": \"Last Name\",\n        \"Mailing Address\": \"Mailing Address\",\n        Birthdate: \"Birthdate\",\n        \"Telgram ID\": \"Telegram ID\",\n        \"DNI/Password\": \"DNI/Passport\",\n        Nationality: \"Nationality\",\n        \"Select a country\": \"Select a country\",\n        Email: \"Email\",\n        Password: \"Password\",\n        \"SCAN YOUR QR CODE\": \"SCAN YOUR QR CODE\",\n        \"First, you have to scan the QR Code that is in the reverse of your wine bottle.\":\n          \"First, you have to scan the QR Code that is in the reverse of your wine bottle.\",\n        Tastings: \"Tastings\",\n        \"New Tasting\": \"New Tasting\",\n        Date: \"Date\",\n        Token: \"Token\",\n        \"Token ID\": \"Token ID\",\n        Actions: \"Actions\",\n        \"Mint NFT\": \"Mint NFT\",\n        \"NFT Minted Succesfully!\": \"NFT Minted Succesfully!\",\n        Profile: \"Profile\",\n        \"Edit Profile\": \"Edit Profile\",\n        Update: \"Update\",\n        \"Back to Profile\": \"Back to Profile\",\n        \"This is not a valid email.\": \"This is not a valid email.\",\n        \"Invalid QR Code.\": \"Invalid QR Code.\",\n        \"The password must be between 6 and 40 characters.\": \"The password must be between 6 and 40 characters.\",\n        \"Not Specified\": \"Not Specified\",\n        \"Reset your password\": \"Reset your password\",\n        \"Reset password\": \"Reset password\",\n        \"Add New Tasting\": \"Add New Tasting\",\n        \"Take a picture\": \"Take a picture\",\n        \"Are you sharing this bottle with other people? How many?\": \"Are you sharing this bottle with other people? How many?\",\n        \"Did you buy this bottle with crypto? or in a shop or restaurant? was it a gift?\": \"Did you buy this bottle with crypto? or in a shop or restaurant? was it a gift?\",\n        \"Are you drinking this wine with food? What are you eating?\": \"Are you drinking this wine with food? What are you eating?\",\n        \"Do you like this wine? How would you rank it?\": \"Do you like this wine? How would you rank it?\",\n        \"Do you think we should build a colony on Mars?\": \"Do you think we should build a colony on Mars?\",\n        \"Register Tasting\": \"Register Tasting\",\n        \"Minting is currently available only on ETH Mainnet. Check your Network on Metamask\": \"Minting is currently available only on ETH Mainnet. Check your Network on Metamask\",\n\n        \n      },\n    },\n    es: {\n      translations: {\n        \"Coming Soon\": \"Proximamente\",\n        Login: \"Iniciar Sesión\",\n        Register: \"Registro\",\n        \"You Drink it, You Own it!\": \"You Drink it, You Own it!\",\n        Email: \"Correo Electrónico\",\n        Password: \"Contraseña\",\n        \"Forgot Password?\": \"Perdiste tu contraseña?\",\n        \"This field is required!\": \"Este campo es requerido\",\n        \"Register to continue!\": \"Registrate para continuar!\",\n        \"First Name\": \"Nombre\",\n        \"Last Name\": \"Apellido\",\n        \"Mailing Address\": \"Domicilio donde reside\",\n        Birthdate: \"Cumpleaños\",\n        \"Telegram ID\": \"ID de Telegram\",\n        \"DNI/Passport\": \"DNI/Pasaporte\",\n        Nationality: \"Nacionalidad\",\n        \"Select a country\": \"Seleccionar País\",\n        Email: \"Correo Electrónico\",\n        Password: \"Contraseña\",\n        \"SCAN YOUR QR CODE\": \"ESCANEA EL QR\",\n        \"First, you have to scan the QR Code that is in the reverse of your wine bottle.\":\n          \"Primero, escanea el QR que se encuentra en el reverso de la botella\",\n        Tastings: \"Degustaciones\",\n        \"New Tasting\": \"Nueva Degustación\",\n        Date: \"Fecha\",\n        Token: \"Token\",\n        \"Token ID\": \"ID Token\",\n        Actions: \"Acciones\",\n        \"Mint NFT\": \"Mint NFT\",\n        \"NFT Minted Succesfully!\": \"NFT Minted exitosamente!\",\n        Profile: \"Profile\",\n        \"Edit Profile\": \"Editar Perfil\",\n        Update: \"Actualizar\",\n        \"Back to Profile\": \"Volver al Perfil\",\n        \"This is not a valid email.\": \"Tu correo electrónico no es válido\",\n        \"Invalid QR Code.\": \"Código QR inválido\",\n        \"The password must be between 6 and 40 characters.\": \"La contraseña debe contener entre 6 y 40 caracteres\",\n        \"Not Specified\": \"Sin Especificar\",\n        \"Reset your password\": \"Restablecer contraseña\",\n        \"Reset password\": \"Restablecer contraseña\",\n        \"Add New Tasting\": \"Registrar nueva degustación\",\n        \"Take a picture\": \"Toma una selfie con el vino\",\n        \"Are you sharing this bottle with other people? How many?\": \"¿Comparte esta botella con otras personas? ¿Con cuántos?\",\n        \"Did you buy this bottle with crypto? or in a shop or restaurant? was it a gift?\": \"¿Compraste esta botella con criptomonedas? o en una tienda o restaurante? ¿fue un regalo?\",\n        \"Are you drinking this wine with food? What are you eating?\": \"¿Estás bebiendo este vino con la comida? ¿Qué estás comiendo?\",\n        \"Do you like this wine? How would you rank it?\": \"¿Le gusta este vino? ¿Cómo lo calificaría?\",\n        \"Do you think we should build a colony on Mars?\": \"¿Cree que deberíamos construir una colonia en Marte?\",\n        \"Register Tasting\": \"Registrar Degustación\",\n        \"Minting is currently available only on ETH Mainnet. Check your Network on Metamask\": \"El minting está actualmente disponible sólo en la red principal de ETH. Compruebe su red en Metamask\"\n\n      },\n    },\n    fr: {\n        translations: {\n          \"Coming Soon\": \"À venir\",\n          Login: \"Iniciar Sesión\",\n          Register: \"Registre\",\n          \"You Drink it, You Own it!\": \"You Drink it, You Own it!\",\n          Email: \"Courriel\",\n          Password: \"Mot de passe\",\n          \"Forgot Password?\": \"Mot de passe oublié ?\",\n          \"This field is required!\": \"Ce champ est obligatoire !\",\n          \"Register to continue!\": \"Inscrivez-vous pour continuer !\",\n          \"First Name\": \"Prénom\",\n          \"Last Name\": \"Dernier nom\",\n          \"Mailing Address\": \"Adresse postale\",\n          Birthdate: \"Date de naissance\",\n          \"Telegram ID\": \"ID de Telegram\",\n          \"DNI/Passport\": \"DNI/Passeport\",\n          Nationality: \"Nationalité\",\n          \"Select a country\": \"Sélectionnez un pays\",\n          \"SCAN YOUR QR CODE\": \"SCANNEZ VOTRE QR\",\n          \"First, you have to scan the QR Code that is in the reverse of your wine bottle.\":\n            \"Tout d'abord, vous devez scanner le code QR qui se trouve au dos de votre bouteille de vin.\",\n          Tastings: \"Dégustations\",\n          \"New Tasting\": \"Nouvelle Dégustation\",\n          Date: \"Date\",\n          Token: \"Token\",\n          \"Token ID\": \"Token ID\",\n          Actions: \"Actions\",\n          \"Mint NFT\": \"Mint NFT\",\n          \"NFT Minted Succesfully!\": \"La NFT a réussi son pari !\",\n          Profile: \"Profil\",\n          \"Edit Profile\": \"Modifier le profil\",\n          Update: \"Mise à jour\",\n          \"Back to Profile\": \"Retour au profil\",\n          \"This is not a valid email.\": \"Ce n'est pas un email valide.\",\n          \"Invalid QR Code.\": \"Code QR non valide.\",\n          \"The password must be between 6 and 40 characters.\": \"Le mot de passe doit comporter entre 6 et 40 caractères.\",\n          \"Not Specified\": \"Non spécifié\",\n          \"Reset your password\": \"Réinitialiser votre mot de passe\",\n          \"Reset password\": \"Réinitialiser le mot de passe\",\n          \"Add New Tasting\": \"Ajouter une nouvelle dégustation\",\n          \"Take a picture\": \"Prenez une photo\",\n          \"Are you sharing this bottle with other people? How many?\": \"Partagez-vous cette bouteille avec d'autres personnes ? Combien de personnes ?\",\n          \"Did you buy this bottle with crypto? or in a shop or restaurant? was it a gift?\": \"Avez-vous acheté cette bouteille avec de la crypto ? ou dans un magasin ou un restaurant ? était-ce un cadeau ?\",\n          \"Are you drinking this wine with food? What are you eating?\": \"Buvez-vous ce vin avec de la nourriture ? Qu'est-ce que vous mangez ?\",\n          \"Do you like this wine? How would you rank it?\": \"Aimez-vous ce vin ? Comment le classeriez-vous ?\",\n          \"Do you think we should build a colony on Mars?\": \"Pensez-vous que nous devrions construire une colonie sur Mars ?\",\n          \"Register Tasting\": \"Enregistrer la dégustation\",\n          \"Minting is currently available only on ETH Mainnet. Check your Network on Metamask\": \"Le monnayage est actuellement disponible uniquement sur le Mainnet ETH. Vérifiez votre réseau sur Metamask\"\n  \n        },\n      },\n      cat: {\n        translations: {\n          \"Coming Soon\": \"Aviat\",\n          Login: \"Connexió\",\n          Register: \"Registrar\",\n          \"You Drink it, You Own it!\": \"You Drink it, You Own it!\",\n          Email: \"Correu electrònic\",\n          Password: \"Contrasenya\",\n          \"Forgot Password?\": \"Heu oblidat la contrasenya?\",\n          \"This field is required!\": \"Aquest camp és necessari!\",\n          \"Register to continue!\": \"Registra't per continuar!\",\n          \"First Name\": \"Nom\",\n          \"Last Name\": \"Cognoms\",\n          \"Mailing Address\": \"Adreça postal\",\n          Birthdate: \"Data de naixement\",\n          \"Telegram ID\": \"Telegram ID\",\n          \"DNI/Passport\": \"DNI/Passaport\",\n          Nationality: \"Nacionalitat\",\n          \"Select a country\": \"Seleccioneu un país\",\n          \"SCAN YOUR QR CODE\": \"ESCANEJA EL TEU QR\",\n          \"First, you have to scan the QR Code that is in the reverse of your wine bottle.\":\n            \"En primer lloc, heu d'escanejar el codi QR que hi ha al revers de la vostra ampolla de vi.\",\n          Tastings: \"Degustacions\",\n          \"New Tasting\": \"Nou Tast\",\n          Date: \"Datar\",\n          Token: \"Token\",\n          \"Token ID\": \"Token ID\",\n          Actions: \"Accions\",\n          \"Mint NFT\": \"Mint NFT\",\n          \"NFT Minted Succesfully!\": \"NFT encunyat amb èxit!\",\n          Profile: \"Perfil\",\n          \"Edit Profile\": \"Edita el perfil\",\n          Update: \"Actualitzar\",\n          \"Back to Profile\": \"Torna al perfil\",\n          \"This is not a valid email.\": \"Aquest correu electrònic no és vàlid.\",\n          \"Invalid QR Code.\": \"El codi QR no és vàlid.\",\n          \"The password must be between 6 and 40 characters.\": \"La contrasenya ha de tenir entre 6 i 40 caràcters.\",\n          \"Not Specified\": \"No s'ha especificat\",\n          \"Reset your password\": \"Reinicialitza la contrasenya\",\n          \"Reset password\": \"Reinicialitza la contrasenya\",\n          \"Add New Tasting\": \"Afegeix un tast nou\",\n          \"Take a picture\": \"Fes una foto\",\n          \"Are you sharing this bottle with other people? How many?\": \"Comparteixes aquesta ampolla amb altres persones? Quant?\",\n          \"Did you buy this bottle with crypto? or in a shop or restaurant? was it a gift?\": \"Has comprat aquesta ampolla amb criptografia? O en una botiga o restaurant? Va ser un regal?\",\n          \"Are you drinking this wine with food? What are you eating?\": \"Estàs bevent aquest vi amb menjar? Què estàs menjant?\",\n          \"Do you like this wine? How would you rank it?\": \"T'agrada aquest vi? Com ho classificaries?\",\n          \"Do you think we should build a colony on Mars?\": \"Creus que hauríem de construir una colònia a Mart?\",\n          \"Register Tasting\": \"Registre Degustació\",\n          \"Minting is currently available only on ETH Mainnet. Check your Network on Metamask\": \"L'encunyació només està disponible a ETH Mainnet. Comproveu la xarxa a Metamask\"\n  \n        },\n      },\n      pr: {\n        translations: {\n          \"Coming Soon\": \"Brevemente\",\n          Login: \"Entrar\",\n          Register: \"Registe-se\",\n          \"You Drink it, You Own it!\": \"You Drink it, You Own it!\",\n          Email: \"Correu electrònic\",\n          Password: \"Senha\",\n          \"Forgot Password?\": \"Esqueceu-se da senha?\",\n          \"This field is required!\": \"Este campo é obrigatório!\",\n          \"Register to continue!\": \"Registe-se para continuar!\",\n          \"First Name\": \"Primeiro nome\",\n          \"Last Name\": \"Sobrenome\",\n          \"Mailing Address\": \"Endereço de correio\",\n          Birthdate: \"Data de nascimento\",\n          \"Telegram ID\": \"Telegram ID\",\n          \"DNI/Passport\": \"DNI/Passaporte\",\n          Nationality: \"Nacionalidade\",\n          \"Select a country\": \"Seleccione um país\",\n          \"SCAN YOUR QR CODE\": \"DIGITALIZE O SEU QR\",\n          \"First, you have to scan the QR Code that is in the reverse of your wine bottle.\":\n            \"Primeiro, tem de digitalizar o Código QR que se encontra no verso da sua garrafa de vinho.\",\n          Tastings: \"Provas\",\n          \"New Tasting\": \"Nova Degustação\",\n          Date: \"Data\",\n          Token: \"Token\",\n          \"Token ID\": \"Token ID\",\n          Actions: \"Acções\",\n          \"Mint NFT\": \"Mint NFT\",\n          \"NFT Minted Succesfully!\": \"NFT Minado com Sucesso!\",\n          Profile: \"Perfil\",\n          \"Edit Profile\": \"Editar Perfil\",\n          Update: \"Actualização\",\n          \"Back to Profile\": \"Voltar ao Perfil\",\n          \"This is not a valid email.\": \"Este não é um e-mail válido..\",\n          \"Invalid QR Code.\": \"Código QR inválido.\",\n          \"The password must be between 6 and 40 characters.\": \"A palavra-passe deve ter entre 6 e 40 caracteres.\",\n          \"Not Specified\": \"Não Especificado\",\n          \"Reset your password\": \"Redefinir a sua palavra-passe\",\n          \"Reset password\": \"Redefinir a sua palavra-passe\",\n          \"Add New Tasting\": \"Adicionar nova degustação\",\n          \"Take a picture\": \"Tirar uma fotografia\",\n          \"Are you sharing this bottle with other people? How many?\": \"Está a partilhar esta garrafa com outras pessoas? Quantas?\",\n          \"Did you buy this bottle with crypto? or in a shop or restaurant? was it a gift?\": \"Comprou esta garrafa com criptografia? ou numa loja ou restaurante? foi um presente?\",\n          \"Are you drinking this wine with food? What are you eating?\": \"Está a beber este vinho com comida? O que estás a comer?\",\n          \"Do you like this wine? How would you rank it?\": \"Gosta deste vinho? Como o classificaria?\",\n          \"Do you think we should build a colony on Mars?\": \"Acha que devemos construir uma colónia em Marte?\",\n          \"Register Tasting\": \"Registrar Degustação\",\n          \"Minting is currently available only on ETH Mainnet. Check your Network on Metamask\": \"A cunhagem está actualmente disponível apenas na ETH Mainnet. Verifique a sua rede no Metamask\"\n  \n        },\n      },\n  },\n  fallbackLng: \"en\",\n  debug: true,\n\n  // have a common namespace used around the full app\n  ns: [\"translations\"],\n  defaultNS: \"translations\",\n\n  keySeparator: false, // we use content as keys\n\n  interpolation: {\n    escapeValue: false, // not needed for react!!\n    formatSeparator: \",\",\n  },\n\n  react: {\n    wait: true,\n  },\n});\n\nexport default i18n;\n","import axios from \"axios\";\n\n//const API_URL = \"http://143.198.152.77:4000\" \nconst API_URL = \"http://159.203.169.184:3000\"\n \n\nclass AuthService {\n  async login(email, password) {\n    const response = await axios\n      .post(API_URL + \"/login\", {\n        \"email\": email,\n        \"password\": password\n      });\n    if (response.data.loginResponse.token) {\n      localStorage.setItem('token', JSON.stringify(response.data.loginResponse.token));\n      localStorage.setItem('user', JSON.stringify(response.data.loginResponse.user));\n    }\n    return response.data;\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  update(email, password, firstName, lastName, address, birthDate, telegramId, walletAddress, userId) {\n\n    let birthday = new Date(birthDate);\n\n    return axios.patch(API_URL + \"/users\" + userId, {\n      \"firstName\": firstName,\n      \"lastName\": lastName,\n      \"telegramId\": telegramId,\n      \"birthDate\": birthday,\n      \"email\": email,\n      \"address_1\": address,\n      \"address_2\": \"\",\n      \"password\": password,\n      \"walletAddress\": walletAddress,\n      \"roleId\": 1,\n      \"statusId\": 3,\n      \"resetKey\": \"string\"\n    });\n  }\n\n  resetPassword(email) {\n    return axios.post(API_URL + \"/reset-password/init\", {\n      \"email\": email\n    });\n  }\n\n  updatePassword(resetkey, password, confirmPassword) {\n    return axios.put(API_URL + \"/reset-password/finish\", {\n      \"resetkey\": resetkey,\n      \"password\": password,\n      \"confirmPassword\": confirmPassword\n    }) \n  }\n\n  register(email, password, firstName, lastName, address, birthDate, telegramId, walletAddress) {\n\n    let birthday = new Date(birthDate);\n\n    return axios.post(API_URL + \"/signup\", {\n      \"firstName\": firstName,\n      \"lastName\": lastName,\n      \"telegramId\": telegramId,\n      \"birthDate\": birthday,\n      \"email\": email,\n      \"address_1\": address,\n      \"address_2\": \"\",\n      \"password\": password,\n      \"walletAddress\": walletAddress,\n      \"roleId\": 1,\n      \"statusId\": 3\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  }\n\n  getToken() {\n    return JSON.parse(localStorage.getItem('token'));\n  }\n\n}\n\nexport default new AuthService();\n","import axios from \"axios\";\n\n//const API_URL = \"http://143.198.152.77:4000\" \nconst API_URL = \"http://159.203.169.184:3000\"\n\nclass QrService {\n\n    async checkQR(qrValue) {\n        return axios\n            .get(API_URL + \"/qrstatus/\" + qrValue)\n            .then(response => {\n                localStorage.setItem('allowClaim', JSON.stringify(response.data.allowClaim));\n                if (qrValue !== undefined) {\n                localStorage.setItem('qrCodeT', JSON.stringify(qrValue));\n            }\n                return response.data.allowClaim;\n            });\n    }\n\n    getallowClaim() {\n        return JSON.parse(localStorage.getItem('allowClaim'));\n    }\n\n    getQRClaimed() {\n        return JSON.parse(localStorage.getItem('qrCodeT'));\n    }\n\n}\n\nexport default new QrService();\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthService from \"../services/auth.service\";\nimport qrService from \"../services/qr.service\";\nimport { withRouter } from \"react-router-dom\";\nimport i18next from \"i18next\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        {i18next.t(\"This field is required!\")}\n      </div>\n    );\n  }\n};\n\n\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\",\n      currentUser: { email: \"\" },\n      userReady: false\n    };\n  }\n\n  async componentDidMount() {\n    //const qrValid = await qrService.checkQR(this.props.match.params.id);\n    //qrService.checkQR(this.props.match.params.id);\n    //console.log(qrValid);\n    //console.log(qrService.getallowClaim());\n    //console.log(qrService.getQRClaimed());\n    qrService.getallowClaim();\n    qrService.getQRClaimed();\n    //this.setState({ qrValue: qrValid});\n    const currentUser = AuthService.getCurrentUser();\n    const currentToken = AuthService.getToken();\n    if (!currentUser)\n    this.setState({ currentUser: currentUser, userReady: true });\n    this.setState({ currentToken: currentToken, userReady: true });\n    \n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true,\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.email, this.state.password).then(\n        () => {\n          this.props.history.push(\"/app/add-tasting\");\n          window.location.reload();\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.error.message) ||\n            error.message ||\n            error.toString();\n\n\n\n          this.setState({\n            loading: false,\n            message: resMessage ,\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n   \n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container login-form\">\n          <h1>\n          {i18next.t(\"You Drink it, You Own it!\")}\n\n            {/* <br />\n            <span className=\"subh1\">Sign in to continue!</span> */}\n          </h1>\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={(c) => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">{i18next.t(\"Email\")}</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={this.onChangeEmail}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">{i18next.t(\"Password\")}</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n            <a href=\"/app/forgot-password\" style={{ color:\"#840c4a\"}}>{i18next.t(\"Forgot Password?\")}</a>\n            <div className=\"form-group\"><div className=\"form-group\"></div>\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>{i18next.t(\"Login\")}</span>\n              </button>\n            </div>\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={(c) => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Login);\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport qrService from \"../services/qr.service\";\nimport AuthService from \"../services/auth.service\";\nimport i18next from \"i18next\";\n\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n         {i18next.t(\"This field is required!\")}\n      </div>\n    );\n  }\n};\n\nconst email = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        {i18next.t(\"This is not a valid email.\")}       \n      </div>\n    );\n  }\n};\n\n// const vusername = (value) => {\n//   if (value.length < 3 || value.length > 20) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The username must be between 3 and 20 characters.\n//       </div>\n//     );\n//   }\n// };\n\nconst qrCode = (value) => {\n  if (value === false) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        {i18next.t(\"Invalid QR Code.\")}\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        {i18next.t(\"The password must be between 6 and 40 characters.\")}\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\n    this.onChangeLastName = this.onChangeLastName.bind(this);\n    this.onChangeAddress = this.onChangeAddress.bind(this);\n    this.onChangeBirthDate = this.onChangeBirthDate.bind(this);\n    this.onChangeTelegramId = this.onChangeTelegramId.bind(this);\n    this.onChangeWalletAddress = this.onChangeWalletAddress.bind(this);\n\n    /* QR Reading */\n    this.state = {\n      email: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      address: \"\",\n      birthDate: \"\",\n      telegramId: \"\",\n      walletAddress: \"\",\n      successful: false,\n      qrValue: \"\",\n      message: \"\",\n    };\n  }\n\n  async componentDidMount() {\n    //const qrValid = await qrService.checkQR(this.props.match.params.id);\n    //console.log(qrValid);\n    console.log(qrService.getallowClaim());\n    console.log(qrService.getQRClaimed());\n    this.setState({ qrValue: qrService.getQRClaimed() });\n    //this.setState({ qrValue: qrValid});\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  onChangeFirstName(e) {\n    this.setState({\n      firstName: e.target.value,\n    });\n  }\n\n  onChangeLastName(e) {\n    this.setState({\n      lastName: e.target.value,\n    });\n  }\n\n  onChangeAddress(e) {\n    this.setState({\n      address: e.target.value,\n    });\n  }\n\n  onChangeBirthDate(e) {\n    this.setState({\n      birthDate: e.target.value,\n    });\n  }\n\n  onChangeTelegramId(e) {\n    this.setState({\n      telegramId: e.target.value,\n    });\n  }\n\n  onChangeWalletAddress(e) {\n    this.setState({\n      walletAddress: e.target.value,\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false,\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.email,\n        this.state.password,\n        this.state.firstName,\n        this.state.lastName,\n        this.state.address,\n        this.state.birthDate,\n        this.state.telegramId,\n        this.state.walletAddress,\n        this.state.qrValue\n      ).then(\n        (response) => {\n          this.props.history.push(\"/app/login\");\n          window.location.reload();\n          this.setState({\n            message: response.data.message,\n            successful: true,\n          });\n          console.log(response);\n          console.log(response.data);\n          console.log(response.data.message);\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage,\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container login-form\">\n          <h1>\n            You Drink it, You Own it!\n            <br />\n            <span className=\"subh1\">{i18next.t(\"Register to continue!\")}</span>\n            <br />\n          </h1>\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={(c) => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <Input\n                    type=\"hidden\"\n                    className=\"form-control\"\n                    name=\"qrCode\"\n                    value={this.state.qrValue}\n                    validations={[qrCode, required]}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"firstName\">{i18next.t(\"First Name\")}</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"firstName\"\n                    value={this.state.firstName}\n                    onChange={this.onChangeFirstName}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"lastName\">{i18next.t(\"Last Name\")}</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"lastName\"\n                    value={this.state.lastName}\n                    onChange={this.onChangeLastName}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"address\">{i18next.t(\"Mailing Address\")}</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"address\"\n                    value={this.state.address}\n                    onChange={this.onChangeAddress}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"birthDate\">{i18next.t(\"Birthdate\")}</label>\n                  <Input\n                    type=\"date\"\n                    className=\"form-control\"\n                    name=\"birthDate\"\n                    value={this.state.birthDate}\n                    onChange={this.onChangeBirthDate}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"telegramId\">{i18next.t(\"Telegram ID\")}</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"telegramId\"\n                    value={this.state.telegramId}\n                    onChange={this.onChangeTelegramId}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"walletAddress\">{i18next.t(\"DNI/Passport\")}</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"walletAddress\"\n                    value={this.state.walletAddress}\n                    onChange={this.onChangeWalletAddress}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"nationality\">{i18next.t(\"Nationality\")}</label>\n                  <Select name=\"city\" value=\"\" className=\"form-control\">\n                    <option value=\"  \" selected>\n                    {i18next.t(\"Select a country\")}\n                    </option>\n                    <option value=\"--\">{i18next.t(\"Not Specified\")}</option>\n                    <option value=\"AF\">Afghanistan</option>\n                    <option value=\"AL\">Albania</option>\n                    <option value=\"DZ\">Algeria</option>\n                    <option value=\"AS\">American Samoa</option>\n                    <option value=\"AD\">Andorra</option>\n                    <option value=\"AO\">Angola</option>\n                    <option value=\"AI\">Anguilla</option>\n                    <option value=\"AQ\">Antarctica</option>\n                    <option value=\"AG\">Antigua and Barbuda</option>\n                    <option value=\"AR\">Argentina</option>\n                    <option value=\"AM\">Armenia</option>\n                    <option value=\"AW\">Aruba</option>\n                    <option value=\"AU\">Australia</option>\n                    <option value=\"AT\">Austria</option>\n                    <option value=\"AZ\">Azerbaijan</option>\n                    <option value=\"BS\">Bahamas</option>\n                    <option value=\"BH\">Bahrain</option>\n                    <option value=\"BD\">Bangladesh</option>\n                    <option value=\"BB\">Barbados</option>\n                    <option value=\"BY\">Belarus</option>\n                    <option value=\"BE\">Belgium</option>\n                    <option value=\"BZ\">Belize</option>\n                    <option value=\"BJ\">Benin</option>\n                    <option value=\"BM\">Bermuda</option>\n                    <option value=\"BT\">Bhutan</option>\n                    <option value=\"BO\">Bolivia</option>\n                    <option value=\"BA\">Bosnia and Herzegowina</option>\n                    <option value=\"BW\">Botswana</option>\n                    <option value=\"BV\">Bouvet Island</option>\n                    <option value=\"BR\">Brazil</option>\n                    <option value=\"IO\">British Indian Ocean Territory</option>\n                    <option value=\"BN\">Brunei Darussalam</option>\n                    <option value=\"BG\">Bulgaria</option>\n                    <option value=\"BF\">Burkina Faso</option>\n                    <option value=\"BI\">Burundi</option>\n                    <option value=\"KH\">Cambodia</option>\n                    <option value=\"CM\">Cameroon</option>\n                    <option value=\"CA\">Canada</option>\n                    <option value=\"CV\">Cape Verde</option>\n                    <option value=\"KY\">Cayman Islands</option>\n                    <option value=\"CF\">Central African Republic</option>\n                    <option value=\"TD\">Chad</option>\n                    <option value=\"CL\">Chile</option>\n                    <option value=\"CN\">China</option>\n                    <option value=\"CX\">Christmas Island</option>\n                    <option value=\"CC\">Cocos (Keeling) Islands</option>\n                    <option value=\"CO\">Colombia</option>\n                    <option value=\"KM\">Comoros</option>\n                    <option value=\"CG\">Congo</option>\n                    <option value=\"CD\">\n                      Congo, the Democratic Republic of the\n                    </option>\n                    <option value=\"CK\">Cook Islands</option>\n                    <option value=\"CR\">Costa Rica</option>\n                    <option value=\"CI\">Cote d'Ivoire</option>\n                    <option value=\"HR\">Croatia (Hrvatska)</option>\n                    <option value=\"CU\">Cuba</option>\n                    <option value=\"CY\">Cyprus</option>\n                    <option value=\"CZ\">Czech Republic</option>\n                    <option value=\"DK\">Denmark</option>\n                    <option value=\"DJ\">Djibouti</option>\n                    <option value=\"DM\">Dominica</option>\n                    <option value=\"DO\">Dominican Republic</option>\n                    <option value=\"TP\">East Timor</option>\n                    <option value=\"EC\">Ecuador</option>\n                    <option value=\"EG\">Egypt</option>\n                    <option value=\"SV\">El Salvador</option>\n                    <option value=\"GQ\">Equatorial Guinea</option>\n                    <option value=\"ER\">Eritrea</option>\n                    <option value=\"EE\">Estonia</option>\n                    <option value=\"ET\">Ethiopia</option>\n                    <option value=\"FK\">Falkland Islands (Malvinas)</option>\n                    <option value=\"FO\">Faroe Islands</option>\n                    <option value=\"FJ\">Fiji</option>\n                    <option value=\"FI\">Finland</option>\n                    <option value=\"FR\">France</option>\n                    <option value=\"FX\">France, Metropolitan</option>\n                    <option value=\"GF\">French Guiana</option>\n                    <option value=\"PF\">French Polynesia</option>\n                    <option value=\"TF\">French Southern Territories</option>\n                    <option value=\"GA\">Gabon</option>\n                    <option value=\"GM\">Gambia</option>\n                    <option value=\"GE\">Georgia</option>\n                    <option value=\"DE\">Germany</option>\n                    <option value=\"GH\">Ghana</option>\n                    <option value=\"GI\">Gibraltar</option>\n                    <option value=\"GR\">Greece</option>\n                    <option value=\"GL\">Greenland</option>\n                    <option value=\"GD\">Grenada</option>\n                    <option value=\"GP\">Guadeloupe</option>\n                    <option value=\"GU\">Guam</option>\n                    <option value=\"GT\">Guatemala</option>\n                    <option value=\"GN\">Guinea</option>\n                    <option value=\"GW\">Guinea-Bissau</option>\n                    <option value=\"GY\">Guyana</option>\n                    <option value=\"HT\">Haiti</option>\n                    <option value=\"HM\">Heard and Mc Donald Islands</option>\n                    <option value=\"VA\">Holy See (Vatican City State)</option>\n                    <option value=\"HN\">Honduras</option>\n                    <option value=\"HK\">Hong Kong</option>\n                    <option value=\"HU\">Hungary</option>\n                    <option value=\"IS\">Iceland</option>\n                    <option value=\"IN\">India</option>\n                    <option value=\"ID\">Indonesia</option>\n                    <option value=\"IR\">Iran (Islamic Republic of)</option>\n                    <option value=\"IQ\">Iraq</option>\n                    <option value=\"IE\">Ireland</option>\n                    <option value=\"IL\">Israel</option>\n                    <option value=\"IT\">Italy</option>\n                    <option value=\"JM\">Jamaica</option>\n                    <option value=\"JP\">Japan</option>\n                    <option value=\"JO\">Jordan</option>\n                    <option value=\"KZ\">Kazakhstan</option>\n                    <option value=\"KE\">Kenya</option>\n                    <option value=\"KI\">Kiribati</option>\n                    <option value=\"KP\">\n                      Korea, Democratic People's Republic of\n                    </option>\n                    <option value=\"KR\">Korea, Republic of</option>\n                    <option value=\"KW\">Kuwait</option>\n                    <option value=\"KG\">Kyrgyzstan</option>\n                    <option value=\"LA\">Lao People's Democratic Republic</option>\n                    <option value=\"LV\">Latvia</option>\n                    <option value=\"LB\">Lebanon</option>\n                    <option value=\"LS\">Lesotho</option>\n                    <option value=\"LR\">Liberia</option>\n                    <option value=\"LY\">Libyan Arab Jamahiriya</option>\n                    <option value=\"LI\">Liechtenstein</option>\n                    <option value=\"LT\">Lithuania</option>\n                    <option value=\"LU\">Luxembourg</option>\n                    <option value=\"MO\">Macau</option>\n                    <option value=\"MK\">\n                      Macedonia, The Former Yugoslav Republic of\n                    </option>\n                    <option value=\"MG\">Madagascar</option>\n                    <option value=\"MW\">Malawi</option>\n                    <option value=\"MY\">Malaysia</option>\n                    <option value=\"MV\">Maldives</option>\n                    <option value=\"ML\">Mali</option>\n                    <option value=\"MT\">Malta</option>\n                    <option value=\"MH\">Marshall Islands</option>\n                    <option value=\"MQ\">Martinique</option>\n                    <option value=\"MR\">Mauritania</option>\n                    <option value=\"MU\">Mauritius</option>\n                    <option value=\"YT\">Mayotte</option>\n                    <option value=\"MX\">Mexico</option>\n                    <option value=\"FM\">Micronesia, Federated States of</option>\n                    <option value=\"MD\">Moldova, Republic of</option>\n                    <option value=\"MC\">Monaco</option>\n                    <option value=\"MN\">Mongolia</option>\n                    <option value=\"MS\">Montserrat</option>\n                    <option value=\"MA\">Morocco</option>\n                    <option value=\"MZ\">Mozambique</option>\n                    <option value=\"MM\">Myanmar</option>\n                    <option value=\"NA\">Namibia</option>\n                    <option value=\"NR\">Nauru</option>\n                    <option value=\"NP\">Nepal</option>\n                    <option value=\"NL\">Netherlands</option>\n                    <option value=\"AN\">Netherlands Antilles</option>\n                    <option value=\"NC\">New Caledonia</option>\n                    <option value=\"NZ\">New Zealand</option>\n                    <option value=\"NI\">Nicaragua</option>\n                    <option value=\"NE\">Niger</option>\n                    <option value=\"NG\">Nigeria</option>\n                    <option value=\"NU\">Niue</option>\n                    <option value=\"NF\">Norfolk Island</option>\n                    <option value=\"MP\">Northern Mariana Islands</option>\n                    <option value=\"NO\">Norway</option>\n                    <option value=\"OM\">Oman</option>\n                    <option value=\"PK\">Pakistan</option>\n                    <option value=\"PW\">Palau</option>\n                    <option value=\"PA\">Panama</option>\n                    <option value=\"PG\">Papua New Guinea</option>\n                    <option value=\"PY\">Paraguay</option>\n                    <option value=\"PE\">Peru</option>\n                    <option value=\"PH\">Philippines</option>\n                    <option value=\"PN\">Pitcairn</option>\n                    <option value=\"PL\">Poland</option>\n                    <option value=\"PT\">Portugal</option>\n                    <option value=\"PR\">Puerto Rico</option>\n                    <option value=\"QA\">Qatar</option>\n                    <option value=\"RE\">Reunion</option>\n                    <option value=\"RO\">Romania</option>\n                    <option value=\"RU\">Russian Federation</option>\n                    <option value=\"RW\">Rwanda</option>\n                    <option value=\"KN\">Saint Kitts and Nevis</option>\n                    <option value=\"LC\">Saint LUCIA</option>\n                    <option value=\"VC\">Saint Vincent and the Grenadines</option>\n                    <option value=\"WS\">Samoa</option>\n                    <option value=\"SM\">San Marino</option>\n                    <option value=\"ST\">Sao Tome and Principe</option>\n                    <option value=\"SA\">Saudi Arabia</option>\n                    <option value=\"SN\">Senegal</option>\n                    <option value=\"SC\">Seychelles</option>\n                    <option value=\"SL\">Sierra Leone</option>\n                    <option value=\"SG\">Singapore</option>\n                    <option value=\"SK\">Slovakia (Slovak Republic)</option>\n                    <option value=\"SI\">Slovenia</option>\n                    <option value=\"SB\">Solomon Islands</option>\n                    <option value=\"SO\">Somalia</option>\n                    <option value=\"ZA\">South Africa</option>\n                    <option value=\"GS\">\n                      South Georgia and the South Sandwich Islands\n                    </option>\n                    <option value=\"ES\">Spain</option>\n                    <option value=\"LK\">Sri Lanka</option>\n                    <option value=\"SH\">St. Helena</option>\n                    <option value=\"PM\">St. Pierre and Miquelon</option>\n                    <option value=\"SD\">Sudan</option>\n                    <option value=\"SR\">Suriname</option>\n                    <option value=\"SJ\">Svalbard and Jan Mayen Islands</option>\n                    <option value=\"SZ\">Swaziland</option>\n                    <option value=\"SE\">Sweden</option>\n                    <option value=\"CH\">Switzerland</option>\n                    <option value=\"SY\">Syrian Arab Republic</option>\n                    <option value=\"TW\">Taiwan, Province of China</option>\n                    <option value=\"TJ\">Tajikistan</option>\n                    <option value=\"TZ\">Tanzania, United Republic of</option>\n                    <option value=\"TH\">Thailand</option>\n                    <option value=\"TG\">Togo</option>\n                    <option value=\"TK\">Tokelau</option>\n                    <option value=\"TO\">Tonga</option>\n                    <option value=\"TT\">Trinidad and Tobago</option>\n                    <option value=\"TN\">Tunisia</option>\n                    <option value=\"TR\">Turkey</option>\n                    <option value=\"TM\">Turkmenistan</option>\n                    <option value=\"TC\">Turks and Caicos Islands</option>\n                    <option value=\"TV\">Tuvalu</option>\n                    <option value=\"UG\">Uganda</option>\n                    <option value=\"UA\">Ukraine</option>\n                    <option value=\"AE\">United Arab Emirates</option>\n                    <option value=\"GB\">United Kingdom</option>\n                    <option value=\"US\">United States</option>\n                    <option value=\"UM\">\n                      United States Minor Outlying Islands\n                    </option>\n                    <option value=\"UY\">Uruguay</option>\n                    <option value=\"UZ\">Uzbekistan</option>\n                    <option value=\"VU\">Vanuatu</option>\n                    <option value=\"VE\">Venezuela</option>\n                    <option value=\"VN\">Viet Nam</option>\n                    <option value=\"VG\">Virgin Islands (British)</option>\n                    <option value=\"VI\">Virgin Islands (U.S.)</option>\n                    <option value=\"WF\">Wallis and Futuna Islands</option>\n                    <option value=\"EH\">Western Sahara</option>\n                    <option value=\"YE\">Yemen</option>\n                    <option value=\"YU\">Yugoslavia</option>\n                    <option value=\"ZM\">Zambia</option>\n                    <option value=\"ZW\">Zimbabwe</option>\n                  </Select>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">{i18next.t(\"Email\")}</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">{i18next.t(\"Password\")}</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">\n                  {i18next.t(\"Register\")}\n                  </button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={(c) => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n  const token = JSON.parse(localStorage.getItem('token'));\n\n  if (user && token) {\n    //console.log(\"token \" + token);\n    return { Authorization: 'Bearer ' + token };\n  } else {\n    return {};\n  }\n}\n\n","import axios from 'axios';\nimport authHeader from './auth-header';\n\n//const API_URL = \"http://143.198.152.77:4000\" \nconst API_URL = \"http://159.203.169.184:3000\"\n// const API_URL = process.env.APPLICATION_URL;\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + '/all');\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + '/app/user', { headers: authHeader() });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + '/mod', { headers: authHeader() });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + '/admin', { headers: authHeader() });\n  }\n}\n\nexport default new UserService();\n","import Web3 from \"web3\";\n\nimport NFTContractBuild from \"../src/contract/YDIYOI.json\";\n\nlet token_uri = localStorage.getItem(\"ipfsURL\");\n\nlet selectedAccount;\n\nlet SimpleCollectible;\n\nlet isInitialized = false;\n\nexport const init = async () => {\n  let provider = window.ethereum;\n\n  if (typeof provider !== \"undefined\") {\n    // Metamask is installed\n\n    provider\n      .request({ method: \"eth_requestAccounts\" })\n      .then((accounts) => {\n        selectedAccount = accounts[0];\n        console.log(\"Selected account is \", { selectedAccount });\n      })\n      .catch((err) => {\n        console.log(err);\n        return;\n      });\n    // Account is changed Logic\n    window.ethereum.on(\"accountsChanged\", function (accounts) {\n      selectedAccount = accounts[0];\n      console.log(\"Selected account changed to \", { selectedAccount });\n    });\n  }\n\n  const web3 = new Web3(provider);\n\n  const networkId = await web3.eth.net.getId();\n\n  // Smart contract declare + contract address\n  SimpleCollectible = new web3.eth.Contract(\n    NFTContractBuild.abi,\n    ([networkId].addressCon = \"0x91fA0582307134C5f24A1738d76774C6d820a276\")\n  );\n\n  isInitialized = true;\n};\n\n// Function to be called from App.js\nexport const mintToken = async () => {\n  if (!isInitialized) {\n    await init();\n  } // We pass the NFT link (token_uri), going to need to make a request to get that link from API.\n  return SimpleCollectible.methods\n    .safeMint(selectedAccount ,token_uri)\n    .send({ from: selectedAccount });\n};\n\n// Function to clear complete cache data\nconst clearCacheData = () => {\n  caches.keys().then((names) => {\n    names.forEach((name) => {\n      caches.delete(name);\n    });\n  });\n  // alert('Complete Cache Cleared')\n};\n// targets Rinkeby chain, id 4\nconst targetNetworkId = \"0x4\";\n\n// switches network to the one provided\nexport const switchNetwork = async () => {\n  await window.ethereum.request({\n    method: \"wallet_switchEthereumChain\",\n    params: [{ chainId: targetNetworkId }],\n  });\n};\n","import React, { Component } from \"react\";\nimport UserService from \"../services/user.service\";\nimport qrService from \"../services/qr.service\";\nimport Login from \"./Login\";\nimport AuthService from \"../services/auth.service\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: \"\",\n      currentUser: { email: \"\" },\n      userReady: false,\n    };\n  }\n\n  async componentDidMount() {\n    //const { history } = this.props;\n    //console.log(window.location.pathname);\n    //const qrpath = window.location.pathname;\n    //const qrpathFormatted = qrpath.replace(/\\\"/g, \"\");\n    //if(window.location.href.indexOf(\"MTB18\") > -1 ) {\n    //this.redirectTimeout = setTimeout(() => {\n    //history.push('/register'+qrpathFormatted)\n    //}, 5000);\n    //}\n    const qrValid = await qrService.checkQR(this.props.match.params.id);\n    const currentUser = AuthService.getCurrentUser();\n    const currentToken = AuthService.getToken();\n    if (!currentUser)\n      this.setState({ currentUser: currentUser, userReady: true });\n    this.setState({ currentToken: currentToken, userReady: true });\n    console.log(qrValid);\n    console.log(qrService.getallowClaim());\n    console.log(qrService.getQRClaimed());\n    UserService.getPublicContent().then(\n      (response) => {\n        this.setState({\n          content: response.data,\n          currentUser: { email: \"\" },\n          userReady: false,\n        });\n      },\n      (error) => {\n        this.setState({\n          content:\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString(),\n        });\n      }\n    );\n    console.log(this.state.currentUser);\n  }\n\n  render() {\n    return <Login />;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport AuthService from \"../services/auth.service\";\nimport { Link } from \"react-router-dom\";\nimport i18next from \"i18next\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirect: null,\n      userReady: false,\n      currentUser: { email: \"\" },\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n    const currentToken = AuthService.getToken();\n    if (!currentUser) this.setState({ redirect: \"/\" });\n    this.setState({ currentUser: currentUser, userReady: true });\n    this.setState({ currentToken: currentToken, userReady: true });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />;\n    }\n\n    const { currentUser } = this.state;\n    const { currentToken } = this.state;\n    console.log(currentUser);\n    return (\n      <div>\n        <header className=\"jumbotron\">\n          <div className=\"row\">\n            <div className=\"col-md\">\n              <h3>\n                <strong>{currentUser.email}</strong>\n              </h3>\n            </div>\n            <div className=\"col-md\">\n              <Link to={\"/app/edit-profile\"} className=\"nav-link\">\n                <button className=\"btn btn-secondary new-experience-button\">\n                  {i18next.t(\"Edit Profile\")}\n                </button>\n              </Link>\n            </div>\n          </div>\n        </header>\n        {this.state.userReady ? (\n          <div className=\"container profile-card\">\n            {/* <p>\n              <strong>Token:</strong> {currentToken.substring(0, 20)}{\" \"}\n              ...{\" \"}\n              {currentToken.substr(\n                currentToken.length - 20\n              )}\n            </p> */}\n            <p>\n              <strong>{i18next.t(\"Id\")}:</strong> {currentUser.id}\n            </p>\n            <p>\n              <strong>{i18next.t(\"Email\")}:</strong> {currentUser.email}\n            </p>\n            <p>\n              <strong>{i18next.t(\"First Name\")}:</strong> {currentUser.firstName}\n            </p>\n            <p>\n              <strong>{i18next.t(\"Last Name\")}:</strong> {currentUser.lastName}\n            </p>\n            <p>\n              <strong>{i18next.t(\"Mailing Address\")}:</strong> {currentUser.address_1}\n            </p>\n            <p>\n              <strong>{i18next.t(\"Birthdate\")}:</strong> {currentUser.birthDate}\n            </p>\n            <p>\n              <strong>{i18next.t(\"Telegram ID\")}:</strong> {currentUser.telegramId}\n            </p>\n            <p>\n              <strong>{i18next.t(\"DNI/Passport\")}:</strong> {currentUser.walletAddress}\n            </p>\n            {/* <strong>Authorities:</strong>\n            <ul>\n              {currentUser.roles &&\n                currentUser.roles.map((role, index) => (\n                  <li key={index}>{role}</li>\n                ))}\n            </ul> */}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\n//const API_URL = \"http://143.198.152.77:4000\" \nconst API_URL = \"http://159.203.169.184:3000\"\n\nclass ExperienceService {\n\n  // /users/{id}/experiencesdetail\n  async getExperiences(pUserId) {\n    const response = await axios.get(API_URL + \"/users/\" + pUserId + \"/experiencesdetail\", {\n      headers: authHeader(),\n    }); \n    return response;\n  }\n\n  async updateJSON(experienceId, ipfsUrl ) {\n    const response = await axios.patch(\n      API_URL + \"/experiences/\" + experienceId,\n      {\n        id: experienceId,\n        ipfsUrl: ipfsUrl\n      },\n      {\n        headers: authHeader(),\n      }\n    ).then(\n      (response) => {\n        console.log(response);\n\n      }\n    ).catch((error) => {\n      console.log(error);\n    });\n    // return response;\n  }\n\n  async addExperience(\n    statusId,\n    date,\n    userId,\n    location,\n    qrValue,\n    photoFileName,\n  ) {\n    const response = await axios.post(\n      API_URL + \"/experiences\",\n      {\n        date: date,\n        location: location,\n        statusId: statusId,\n        qrValue: qrValue,\n        photoFileName: photoFileName, //\"https://ipfs.io/ipfs/QmbcKQTe44AYBrfhUypuUapCaQUQAHbWiqGufhR7eoCpwU\"\n        nftGenerated: false,\n        userId: userId\n      },\n      {\n        headers: authHeader(),\n      }\n    );\n\n    // response ok : { \"status\" : true , \"message\" : \"Nueva experiencia creada: 1\", \"experienceId\" : 1 }\n    // responose error: { \"status\" : false , \"message\" : \"El QRValue no es válido\", \"experienceId\" : 0 }\n    return response;\n  }\n\n async updateExperience(experienceId, nftGenerated, userId ) {\n    const response = await axios.patch(\n      API_URL + \"/experiences/\" + experienceId,\n      {\n        id: experienceId,\n        nftGenerated: JSON.parse(nftGenerated),\n        userId: userId\n      },\n      {\n        headers: authHeader(),\n      }\n    ).then(\n      (response) => {\n        console.log(response);\n\n      }\n    ).catch((error) => {\n      console.log(error);\n    });\n    // return response;\n  }\n\n\n  // returns an array only with the active questions\n  async getQuestions() {\n    const response = await axios.get(API_URL + \"/survey-questions\", {\n      headers: authHeader(),\n    });\n\n    return response;\n  }\n\n  // recieves array of questions & answers\n  async saveQuestions(experienceId, questions, answers) {\n    const response = await axios.post(\n      API_URL + \"/experiences/\" + experienceId + \"/experience-survey\",\n      {\n        question1: questions[0],\n        answer1: answers[0],\n        question2: questions[1],\n        answer2: answers[1],\n        question3: questions[2],\n        answer3: answers[2],\n        question4: questions[3],\n        answer4: answers[3],\n        question5: questions[4],\n        answer5: answers[4],\n        experienceId: experienceId,\n      },\n      {\n        headers: authHeader(),\n      }\n    );\n\n    return response;\n  }\n}\n\nexport default new ExperienceService();\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service\";\nimport ExperienceService from \"../services/experience.service\";\nimport { mintToken, switchNetwork } from \"../Web3Client\";\nimport { create } from \"ipfs-http-client\";\nimport { Redirect } from \"react-router-dom\";\nimport i18next from \"i18next\";\n\n/* Create an instance of the client */\nconst client = create(\"https://ipfs.infura.io:5001/api/v0\");\n\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\",\n      userReady: false,\n      currentUser: { email: \"\" },\n      // experiencesCount: \"\",\n      experiences: [],\n      currentExperiences: [],\n      minted: false,\n      experienceId: \"\",\n      ipfsUrl: \"\",\n      redirect: null,\n    };\n  }\n\n  async componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n    const currentToken = AuthService.getToken();\n    if (!currentUser) {\n      this.setState({ redirect: \"/\" });\n    } else {\n      this.setState({ userId: currentUser.id });\n      const currentExperiences = await ExperienceService.getExperiences(\n        currentUser.id\n      );\n      this.setState({\n        currentExperiences: currentExperiences,\n      });\n    }\n    switchNetwork();\n    this.setState({ currentUser: currentUser, userReady: true });\n    this.setState({ currentToken: currentToken, userReady: true });\n    UserService.getUserBoard().then(\n      (response) => {\n        this.setState({\n          content: response.data,\n        });\n      },\n      (error) => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString(),\n        });\n      }\n    );\n    await ExperienceService.getExperiences(currentUser.id).then(\n      (response) => {\n        this.setState({\n          experiences: response.data,\n        });\n      },\n      (error) => {\n        this.setState({\n          experiences:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString(),\n        });\n      }\n    );\n\n    console.log(this.state.experiences);\n  }\n \n  // Mint Function\n\n  async createCollectible(index) {\n    console.log(this.state.experiences[index].ipfsUrl);\n    try {\n      const url = this.state.experiences[index].ipfsUrl;\n      const finalURL =  await url.replace(\"ipfs.infura.io\", \"ipfs.io\");\n      console.log(finalURL);\n      this.setState({\n        nftGenerated: true,\n        experienceId: this.state.experiences[index].id,\n      });\n      // Added IPFS URL to LocalStorage.\n      localStorage.setItem(\"ipfsURL\", this.state.experiences[index].ipfsUrl);\n      // console.log(this.state.ipfsUrlJSON);\n      // console.log(this.state.nftGenerated);\n      await mintToken()\n        .then((tx) => {\n          console.log(tx);\n          this.setState({\n            minted: true,\n          });\n          // Removed IPFS from LocalStorage after success minting\n          ExperienceService.updateExperience(\n            this.state.experienceId,\n            this.state.nftGenerated,\n            this.state.currentUser.id\n          ).then(() => {\n            window.location.reload();\n          });\n          // console.log(this.state.nftGenerated);\n          // The following line fixes experiencie not matching minting bug\n          localStorage.removeItem(\"ipfsURL\");\n        })\n        .catch((err) => {\n          // const url = \"\";\n          // const added = \"\"\n          console.log(err);\n          // console.log(url);\n          // console.log(added);\n          // localStorage.removeItem(\"ipfsURL\");\n        });\n    } catch (error) {\n      console.log(\"Error uploading file: \", error);\n      //localStorage.removeItem(\"ipfsURL\");\n      const finalURL = \"\";\n      const added = \"\";\n    }\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />;\n    }\n  \n    const listItems = this.state.experiences.map((item, index) => (\n      <tr key={item.id}>\n        <td>{item.date}</td>\n        <td>{item.wine.name}</td>\n        <td>{item.wine.qrValue}</td>\n        {/* <td>{i18next.t(\"Coming Soon\")}</td> */}\n        <td>\n          {!item.nftGenerated ? (\n            <button\n              tabIndex={index}\n              value={index}\n              className=\"btn-primary btn\"\n              // onClick with index of the experience for create JSON file and upload to IPFS\n              onClick={() => this.createCollectible(index)}\n            >\n              {\" \"}\n              {i18next.t(\"Mint NFT\")}\n            </button>\n          ) : (\n            <p>{i18next.t(\"NFT Minted Succesfully!\")}</p>\n          )}\n        </td>\n      </tr>\n    ));\n    return (\n      <div className=\"container\">\n        <div className=\"row info-message\">\n          <div className=\"col-md\">\n            <p><i className=\"fas fa-exclamation-triangle\"></i> {i18next.t(\"Minting is currently available only on ETH Mainnet. Check your Network on Metamask\")}</p>\n          </div>\n        </div>\n        <header className=\"jumbotron\" id=\"jumbotron-userboard\">\n          <div className=\"row\">\n            <div className=\"col-md\">\n              <h3>{i18next.t(\"Tastings\")}</h3>\n            </div>\n            <div className=\"col-md\">\n              <Link to={\"/app/add-tasting\"} className=\"nav-link\">\n                <button className=\"btn btn-secondary new-experience-button\">\n                {i18next.t(\"New Tasting\")}\n                </button>\n              </Link>\n            </div>\n          </div>\n        </header>\n        <div className=\"container tastings-card\">\n          <div className=\"table-responsive-sm\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">{i18next.t(\"Date\")}</th>\n                  <th scope=\"col\">{i18next.t(\"Token\")}</th>\n                  <th scope=\"col\">{i18next.t(\"Token ID\")}</th>\n                  <th scope=\"col\">{i18next.t(\"Actions\")}</th>\n                </tr>\n              </thead>\n              <tbody>{listItems}</tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardModerator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getModeratorBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardAdmin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getAdminBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ExperienceService from \"../services/experience.service\";\nimport AuthService from \"../services/auth.service\";\nimport qrService from \"../services/qr.service\";\nimport { withRouter } from \"react-router-dom\";\nimport { create } from \"ipfs-http-client\";\nimport { Redirect } from \"react-router-dom\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport TextArea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport i18next from \"i18next\";\n\n\n/* Create an instance of the client */\nconst client = create(\"https://ipfs.infura.io:5001/api/v0\");\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        {i18next.t(\"This field is required!\")}\n      </div>\n    );\n  }\n};\n\n// const qrCode = (value) => {\n//   if (value === false) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         Invalid QR Code.\n//       </div>\n//     );\n//   }\n// };\n\nclass NewExperience extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChangeFile = this.onChangeFile.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      ipfsUrl: \"\",\n      ipfsUrlJson: \"\",\n      qrValue: \"\",\n      photoFileName: \"\",\n      statusId: 5,\n      location: \"\",\n      userId: \"\",\n      date: \"\",\n      latitude: null,\n      longitude: null,\n      experienceId: \"\",\n      qRCodeClaim: \"\",\n      nftGenerated: false,\n      redirect: null,\n      userReady: false,\n      currentUser: { email: \"\" },\n    };\n  }\n\n  componentDidMount() {\n    //const questions = ExperienceService.getQuestions(1);\n    const currentUser = AuthService.getCurrentUser();\n    const currentToken = AuthService.getToken();\n    const qrCode = qrService.getQRClaimed();\n    const qRCodeClaim = qrService.getallowClaim();\n    if (!currentUser) {\n      this.setState({ redirect: \"/\" });\n    } else {\n      this.setState({ userId: currentUser.id });\n    }\n    this.setState({ currentUser: currentUser, userReady: true });\n    this.setState({ currentToken: currentToken, userReady: true });\n    this.setState({ qrValue: qrCode });\n    this.setState({ qRCodeClaim: qRCodeClaim });\n    this.setState({ date: new Date() });\n    this.setState({ location: \"Mendoza\" });\n    //console.log(currentToken);\n    //console.log(currentUser);\n    //console.log(currentUser.id);\n    //console.log(qrCode);\n    //console.log(questions);\n    window.navigator.geolocation.getCurrentPosition((success) =>\n      this.setState({\n        latitude: success.coords.latitude,\n        longitude: success.coords.longitude,\n      })\n    );\n  }\n\n  async onChangeFile(e) {\n    const file = e.target.files[0];\n    try {\n      const added = await client.add(file);\n      const url = `https://ipfs.infura.io/ipfs/${added.path}`;\n      this.setState({\n        photoFileName: url,\n      });\n      console.log(this.state.photoFileName);\n    } catch (error) {\n      console.log(\"Error uploading file: \", error);\n    }\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false,\n    });\n\n    this.form.validateAll();\n\n    // grabación de la experiencia y de las respuesta\n    // la busqueda de las preguntas no debería ir acá\n    if (this.checkBtn.context._errors.length === 0) {\n      ExperienceService.addExperience(\n        this.state.statusId,\n        this.state.date,\n        this.state.userId,\n        this.state.location,\n        this.state.qrValue,\n        this.state.photoFileName,\n        this.state.ipfsUrl\n      ).then(\n        async (response) => {\n          //valido el status de la respuesta para saber si la experiencia se grabó correctamente\n          if (response.data.status) {\n            // la experiencia se grabó exitosamente\n            this.setState({\n              message: response.data.message,\n              experienceId: response.data.experienceId,\n              successful: true,\n            });\n            // grabar respuestas\n            // *** prueba obtener pregutas, esto no debería estar acà, las preguntas\n            // debería buscarlas antes para mostrarlas en la interface ***\n            // la grabación esta dentro de la búsqueda solo para que se realicen en ese orden sincrónico\n            let arrQuestions = [];\n            ExperienceService.getQuestions().then(\n              async (response) => {\n                // transformo el json a un array\n                arrQuestions.push(response.data[0].question1);\n                arrQuestions.push(response.data[0].question2);\n                arrQuestions.push(response.data[0].question3);\n                arrQuestions.push(response.data[0].question4);\n                arrQuestions.push(response.data[0].question5);\n\n                // *** prueba grabar preguntas ***\n                // armo un array con las respuetas y paso ambos array para grabar\n                const arrAnswers = [\n                  this.state.answer1,\n                  this.state.answer2,\n                  this.state.answer3,\n                  this.state.answer4,\n                  this.state.answer5,\n                ];\n                ExperienceService.saveQuestions(\n                  this.state.experienceId,\n                  arrQuestions,\n                  arrAnswers\n                );\n                localStorage.removeItem(\"qrCodeT\");\n                localStorage.removeItem(\"allowClaim\");\n                \n                let uno = (\n                  \"-\" + \n                  \"**Are you sharing this bottle with other people? How many?** \" + \n                  `${this.state.answer1} `\n                );\n                let dos = (\n                  \"-\" + \n                  \"**Did you buy this bottle with crypto? or in a shop or restaurant? was it a gift?** \" + \n                  `${this.state.answer2} ` \n                );\n                let tres = (\n                  \"-\" + \n                  \"**Are you drinking this wine with food? What are you eating?** \" + \n                  `${this.state.answer3} ` \n                );\n                let cuatro = (\n                  \"-\" + \n                  \"**Do you like this wine? How would you rank it?** \" + \n                  `${this.state.answer4} `  \n                  );\n                let cinco = (\n                  \"-\" + \n                  \"**Do you think we should build a colony on Mars?** \" + \n                  `${this.state.answer5} `\n                );\n                let str  = this.state.qrValue;\n                let state = {\n                  name: str.slice(0,str.length-6),\n                  description:  (\n                    \"<p>\" +\n                    uno + \"<br>\" + \"\\n\" + \"<br>\" + \"\\n\" +\n                    dos + \"<br>\" + \"\\n\" + \"<br>\" + \"\\n\" + \n                    tres + \"<br>\" + \"\\n\" + \"<br>\" + \"\\n\" +\n                    cuatro + \"<br>\" + \"\\n\" + \"<br>\" + \"\\n\" + \n                    cinco +\n                    \"</p>\"\n                  ),\n                  image: this.state.photoFileName,\n                  \n                };\n                console.log(state);\n                const toIPFS = JSON.stringify(state);\n                this.setState({\n                  ipfsUrl: toIPFS,\n                });\n                console.log(this.state.ipfsUrl);\n                const file = this.state.ipfsUrl\n                try {\n                  const added = await client.add(file);\n                  const url = `https://ipfs.infura.io/ipfs/${added.path}`;\n                  this.setState({\n                    ipfsUrlJson: url,\n                  });\n                  console.log(this.state.ipfsUrlJson);\n                  ExperienceService.updateJSON (\n                    this.state.experienceId,\n                    this.state.ipfsUrlJson\n                  )\n                  ///this.props.history.push(\"/app/user\");\n                  //window.location.reload();\n                } catch (error) {\n                  console.log(\"Error uploading file: \", error);\n                }\n              },\n              (error) => {\n                console.log(error.toString());\n              },\n            );\n          } else {\n            // *** la experiencia no se grabó, no avanzar en la ejecución  ***\n            this.setState({\n              message: response.data.message,\n              experienceId: 0,\n              successful: false,\n            });\n          }\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage,\n          });\n        }\n      )\n    }\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />;\n    }\n    if (this.state.qRCodeClaim === true) {\n      return (\n        <Form\n          onSubmit={(this.handleSubmit)}\n          ref={(c) => {\n            this.form = c;\n          }}\n        >\n          <div className=\"col-md-12\">\n            <div className=\"card card-container login-form\">\n              <h1>{i18next.t(\"Add New Tasting\")}</h1>\n              <div className=\"form-group\">\n                <label className=\"cameraButton\">\n                  <i className=\"fas fa-camera-retro\"></i>{\" \"}\n                  {i18next.t(\"Take a picture\")}\n                  <Input\n                    type=\"file\"\n                    onChange={this.onChangeFile}\n                    accept=\"image/*;capture=camera\"\n                    validations={[required]}\n                  />\n                </label>\n                {this.state.photoFileName && (\n                  <img\n                    alt=\"ipfs-url\"\n                    src={this.state.photoFileName}\n                    width=\"370px\"\n                  />\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">\n                  {i18next.t(\n                    \"Are you sharing this bottle with other people? How many?\"\n                  )}\n                </label>\n                <TextArea\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"answer1\"\n                  value={this.state.answer1}\n                  onChange={this.handleChange}\n                  validations={[required]}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">\n                  {i18next.t(\n                    \"Did you buy this bottle with crypto? or in a shop or restaurant? was it a gift?\"\n                  )}\n                </label>\n                <TextArea\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"answer2\"\n                  value={this.state.answer2}\n                  onChange={this.handleChange}\n                  validations={[required]}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">\n                  {i18next.t(\n                    \"Are you drinking this wine with food? What are you eating?\"\n                  )}\n                </label>\n                <TextArea\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"answer3\"\n                  value={this.state.answer3}\n                  onChange={this.handleChange}\n                  validations={[required]}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">\n                  {i18next.t(\"Do you like this wine? How would you rank it?\")}\n                </label>\n                <TextArea\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"answer4\"\n                  value={this.state.answer4}\n                  onChange={this.handleChange}\n                  validations={[required]}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">\n                  {i18next.t(\"Do you think we should build a colony on Mars?\")}\n                </label>\n                <TextArea\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"answer5\"\n                  value={this.state.answer5}\n                  onChange={this.handleChange}\n                  validations={[required]}\n                />\n              </div>\n              <div className=\"form-group\">\n                <div className=\"form-group\"></div>\n                <button\n                  className=\"btn btn-primary btn-block\"\n                  disabled={this.state.loading}\n                >\n                  {this.state.loading && (\n                    <span className=\"spinner-border spinner-border-sm\"></span>\n                  )}\n                  <span>{i18next.t(\"Register Tasting\")}</span>\n                </button>\n              </div>\n\n              {this.state.message && (\n                <div className=\"form-group\">\n                  <div className=\"alert alert-danger\" role=\"alert\">\n                    {this.state.message}\n                  </div>\n                </div>\n              )}\n              <CheckButton\n                style={{ display: \"none\" }}\n                ref={(c) => {\n                  this.checkBtn = c;\n                }}\n              />\n            </div>\n          </div>\n        </Form>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <div className=\"col-md-12\">\n            <div className=\"card card-container login-form\">\n              <h1\n                style={{\n                  fontSize: \"35px\",\n                  fontWeight: \"bold\",\n                  color: \"#840c4a\",\n                  lineHeight: \"33px\",\n                }}\n              >\n                {i18next.t(\"SCAN YOUR QR CODE\")}\n              </h1>\n              <p\n                style={{\n                  marginTop: \"20px\",\n                }}\n              >\n                {i18next.t(\n                  \"First, you have to scan the QR Code that is in the reverse of your wine bottle.\"\n                )}\n              </p>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\nexport default withRouter(NewExperience);\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport AuthService from \"../services/auth.service\";\nimport { Link } from \"react-router-dom\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport i18next from \"i18next\";\n\n\nexport default class EditProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\n    this.onChangeLastName = this.onChangeLastName.bind(this);\n    this.onChangeAddress = this.onChangeAddress.bind(this);\n    this.onChangeBirthday = this.onChangeBirthday.bind(this);\n    this.onChangeTelegram = this.onChangeTelegram.bind(this);\n    this.onChangeWalletAddress = this.onChangeWalletAddress.bind(this);\n\n    this.state = {\n      redirect: null,\n      userReady: false,\n      currentUser: { email: \"\" },\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n    // const currentToken = AuthService.getToken();\n    if (!currentUser) this.setState({ redirect: \"/\" });\n    this.setState({ currentUser: currentUser, userReady: true });\n  }\n\n  onChangeFirstName(e) {\n    this.setState({\n      firstName: e.target.value,\n    });\n  }\n\n  onChangeLastName(e) {\n    this.setState({\n      lastName: e.target.value,\n    });\n  }\n\n  onChangeAddress(e) {\n    this.setState({\n      address: e.target.value,\n    });\n  }\n\n  onChangeBirthday(e) {\n    this.setState({\n      birthDate: e.target.value,\n    });\n  }\n\n  onChangeTelegram(e) {\n    this.setState({\n      telegramId: e.target.value,\n    });\n  }\n\n  onChangeWalletAddress(e) {\n    this.setState({\n      walletAddress: e.target.value,\n    });\n  }\n\n  handleUpdate = (e) => {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false,\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.email,\n        this.state.password,\n        this.state.firstName,\n        this.state.lastName,\n        this.state.address,\n        this.state.birthDate,\n        this.state.telegramId,\n        this.state.walletAddress,\n        this.state.qrValue\n      ).then(\n        (response) => {\n          this.props.history.push(\"/login\");\n          window.location.reload();\n          this.setState({\n            message: response.data.message,\n            successful: true,\n          });\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage,\n          });\n        }\n      );\n    }\n  };\n\n\n  render() {\n    const { currentUser } = this.state;\n    // const { currentToken } = this.state;\n    console.log(currentUser);\n\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />;\n    }\n    return (\n      <div>\n        <header className=\"jumbotron\">\n          <div className=\"row\">\n            <div className=\"col-md\">\n              <h3>\n                <strong>{currentUser.email}</strong> {i18next.t(\"Edit Profile\")}\n              </h3>\n            </div>\n            <div className=\"col-md\">\n              <Link to={\"/app/profile\"} className=\"nav-link\">\n                <button className=\"btn btn-secondary new-experience-button\">\n                {i18next.t(\"Back to Profile\")}\n                </button>\n              </Link>\n            </div>\n          </div>\n        </header>\n        {this.state.userReady ? (\n          <div className=\"container profile-card\">\n            <Form\n              onSubmit={this.handleUpdate}\n              ref={(c) => {\n                this.form = c;\n              }}\n            >\n              {!this.state.successful && (\n                <div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"firstName\">{i18next.t(\"First Name\")}</label>\n                    <Input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"firstName\"\n                      value={this.state.firstName}\n                      placeholder={currentUser.firstName}\n                      onChange={this.onChangeFirstName}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"lastName\">{i18next.t(\"Last Name\")}</label>\n                    <Input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"lastName\"\n                      value={this.state.lastName}\n                      placeholder={currentUser.lastName}\n                      onChange={this.onChangeLastName}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"address\">{i18next.t(\"Mailing Address\")}</label>\n                    <Input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"address\"\n                      value={this.state.address}\n                      placeholder={currentUser.address_1}\n                      onChange={this.onChangeAddress}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"birthDate\">{i18next.t(\"Birthdate\")}</label>\n                    <Input\n                      type=\"date\"\n                      className=\"form-control\"\n                      name=\"birthDate\"\n                      value={this.state.birthDate}\n                      placeholder={currentUser.birthDate}\n                      onChange={this.onChangeBirthday}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"telegramId\">{i18next.t(\"Telegram ID\")}</label>\n                    <Input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"telegramId\"\n                      value={this.state.telegramId}\n                      placeholder={currentUser.telegramId}\n                      onChange={this.onChangeTelegram}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"walletAddress\">{i18next.t(\"DNI/Passport\")}</label>\n                    <Input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"walletAddress\"\n                      value={this.state.walletAddress}\n                      placeholder={currentUser.walletAddress}\n                      onChange={this.onChangeWalletAddress}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <button className=\"btn btn-primary btn-block\">\n                    {i18next.t(\"Update\")}\n                    </button>\n                  </div>\n                </div>\n              )}\n\n              {this.state.message && (\n                <div className=\"form-group\">\n                  <div\n                    className={\n                      this.state.successful\n                        ? \"alert alert-success\"\n                        : \"alert alert-danger\"\n                    }\n                    role=\"alert\"\n                  >\n                    {this.state.message}\n                  </div>\n                </div>\n              )}\n              <CheckButton\n                style={{ display: \"none\" }}\n                ref={(c) => {\n                  this.checkBtn = c;\n                }}\n              />\n            </Form>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nexport default class SingleExperience extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirect: null,\n      userReady: false,\n      currentUser: { email: \"\" }    \n    };\n  }\n\n  async componentDidMount() {\n    \n   \n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />;\n    }\n\n    const { currentUser } = this.state;\n    console.log(currentUser);\n    return (\n      <div>\n        <header className=\"jumbotron\">\n          <div className=\"row\">\n            <div className=\"col-md\">\n              <h3>Experience ID {currentUser.id}</h3>\n            </div>\n            <div className=\"col-md\">\n              <Link to={\"/app/user\"} className=\"nav-link\">\n                <button className=\"btn btn-secondary new-experience-button\">\n                  Back to Experiences\n                </button>\n              </Link>\n            </div>\n          </div>\n        </header>\n        {this.state.userReady ? (\n          <div className=\"container profile-card\">\n            <p>\n              <strong>QR Code:</strong>{\" \"}\n              {currentUser.token.substring(0, 20)} ...{\" \"}\n              {currentUser.token.substr(\n                currentUser.token.length - 20\n              )}\n            </p>\n            <p>\n              <strong>Date:</strong> 24/02/2020\n            </p>\n            <p>\n              <strong>Tokens:</strong> 1\n            </p>\n            <p>\n              <strong>Status:</strong> Pending\n            </p>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthService from \"../services/auth.service\";\nimport { withRouter } from \"react-router-dom\";\nimport i18next from \"i18next\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        {i18next.t(\"This field is required!\")}\n      </div>\n    );\n  }\n};\n\nclass ForgotPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.state = {\n      email: \"\",\n      loading: false,\n      message: \"\",\n      currentUser: { email: \"\" },\n      userReady: false,\n      successful: false,\n    };\n  }\n\n  //   async componentDidMount() {\n\n  //   }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value,\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true,\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.resetPassword(this.state.email).then(\n        (response) => {\n          this.setState({\n            message: response.data.message,\n            successful: true,\n          });\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.error.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage,\n            successful: false,\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false,\n        successful: false,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container login-form\">\n          <h1>\n            {i18next.t(\"Reset your password\")}\n            {/* <span className=\"subh1\">You will receive an email with instructions</span> */}\n          </h1>\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={(c) => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">{i18next.t(\"Email\")}</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required]}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <div className=\"form-group\"></div>\n                  <button\n                    className=\"btn btn-primary btn-block\"\n                    disabled={this.state.loading}\n                  >\n                    {this.state.loading && (\n                      <span className=\"spinner-border spinner-border-sm\"></span>\n                    )}\n                    <span>{i18next.t(\"Reset password\")}</span>\n                  </button>\n                </div>\n              </>\n            )}\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={(c) => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ForgotPassword);\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthService from \"../services/auth.service\";\nimport qrService from \"../services/qr.service\";\nimport { withRouter } from \"react-router-dom\";\n\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\n\n\nclass UpdatePassword extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeConfirmPassword = this.onChangeConfirmPassword.bind(this);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      loading: false,\n      message: \"\",\n      userReady: false,\n      resetkey: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    //const qrValid = await qrService.checkQR(this.props.match.params.id);\n    //qrService.checkQR(this.props.match.params.id);\n    //console.log(qrValid);\n    //console.log(qrService.getallowClaim());\n    //console.log(qrService.getQRClaimed());\n    qrService.getallowClaim();\n    qrService.getQRClaimed();\n    const searchParams = window.location.search;\n    const params = new URLSearchParams(searchParams)\n    const reset = params.get('resetKey')\n    this.setState({ resetkey: reset})\n    //this.setState({ qrValue: qrValid});\n    const currentUser = AuthService.getCurrentUser();\n    const currentToken = AuthService.getToken();\n    if (!currentUser)\n    this.setState({ currentUser: currentUser, userReady: true });\n    this.setState({ currentToken: currentToken, userReady: true });\n    \n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  onChangeConfirmPassword(e) {\n    this.setState({\n      confirmPassword: e.target.value,\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true,\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.updatePassword(this.state.resetkey, this.state.password, this.state.confirmPassword).then(\n        () => {\n          this.props.history.push(\"/app/add-experience\");\n          window.location.reload();\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.error.message) ||\n            error.message ||\n            error.toString();\n\n\n\n          this.setState({\n            loading: false,\n            message: resMessage ,\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n   \n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container login-form\">\n          <h1>\n            Reset your password\n            <br />\n            <span className=\"subh1\">Update and confirm your new password</span>\n          </h1>\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={(c) => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Confirm Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.confirmPassword}\n                onChange={this.onChangeConfirmPassword}\n                validations={[required]}\n              />\n            </div>\n            <div className=\"form-group\"><div className=\"form-group\"></div>\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Update Password</span>\n              </button>\n            </div>\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={(c) => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(UpdatePassword);\n","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport logo from \"./assets/images/website-logo.png\";\nimport { withRouter } from \"react-router-dom\";\nimport AuthService from \"./services/auth.service\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\nimport Profile from \"./components/Profile\";\nimport BoardUser from \"./components/UserBoard\";\nimport BoardModerator from \"./components/ModBoard\";\nimport BoardAdmin from \"./components/AdminBoard\";\nimport NewExperience from \"./components/NewExperience\";\nimport EditProfile from \"./components/EditProfile\";\nimport SingleExperience from \"./components/SingleExperience\";\nimport ForgotPassword from \"./components/ForgotPassword\";\nimport UpdatePassword from \"./components/UpdatePassword\";\nimport i18next from \"i18next\";\nimport i18n from \"./i18n\";\nimport { withTranslation } from \"react-i18next\";\nimport Select from \"react-validation/build/select\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n    this.redirectTimeout = null;\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n      test: \"\",\n      value: \"en\",\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n    if (user) {\n      this.setState({\n        currentUser: user,\n        //showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        //showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logout();\n  }\n\n  handleChange = (event) => {\n    console.log(\"selected val is \", event.target.value);\n    let newlang = event.target.value;\n    this.setState((prevState) => ({ value: newlang }));\n    console.log(\"state value is\", newlang);\n    this.props.i18n.changeLanguage(newlang);\n  };\n\n  render() {\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n    const changeLanguage = (lng) => {\n      i18n.changeLanguage(lng);\n    };\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand\" id=\"top-header\">\n        <div className=\"language-selector\">\n        <li className=\"nav-item\">\n              <button className=\"item\" onClick={() => changeLanguage(\"es\")}>\n                ES\n              </button></li>\n              <li className=\"nav-item\">|</li>\n              <li className=\"nav-item\"><button className=\"item\" onClick={() => changeLanguage(\"en\")}>\n                EN\n              </button></li>\n              <li className=\"nav-item\">|</li>\n\n              <li className=\"nav-item\"><button className=\"item\" onClick={() => changeLanguage(\"fr\")}>\n                FR\n              </button></li>\n              <li className=\"nav-item\">|</li>\n\n              <li className=\"nav-item\"><button className=\"item\" onClick={() => changeLanguage(\"cat\")}>\n                CAT\n              </button></li>\n              <li className=\"nav-item\">|</li>\n\n              <li className=\"nav-item\"><button className=\"item\" onClick={() => changeLanguage(\"pr\")}>\n                PR\n              </button></li>\n        </div>\n        </nav>\n        <nav className=\"navbar navbar-expand\" id=\"header\">\n          <Link to={\"#\"} className=\"navbar-brand\">\n            <img alt=\"logo\" className=\"logo-header\" src={logo} />\n          </Link>\n          <div className=\"navbar-nav mr-auto mobile-nav\">\n            {/* <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\">\n                Home\n              </Link>\n            </li> */}\n            {showModeratorBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/app/mod\"} className=\"nav-link\">\n                  Winery Board\n                </Link>\n              </li>\n            )}\n\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/app/admin\"} className=\"nav-link\">\n                  Admin Board\n                </Link>\n              </li>\n            )}\n\n            {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/app/user\"} className=\"nav-link\">\n                  {i18next.t(\"Tastings\")}\n                </Link>\n              </li>\n            )}\n          </div>\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto mobile-nav\">\n              <li className=\"nav-item\">\n                <Link to={\"/app/profile\"} className=\"nav-link\">\n                  <i className=\"far fa-user-circle\"></i> {currentUser.username}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/app/login\" className=\"nav-link\" onClick={this.logOut}>\n                  <i className=\"fas fa-power-off\"></i>\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/app/login\"} className=\"nav-link\">\n                  <button className=\"btn btn-primary btn-block\">\n                    {i18next.t(\"Login\")}\n                  </button>\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to={\"/app/register\"} className=\"nav-link\">\n                  <button className=\"btn btn-secondary btn-block\">\n                    {i18next.t(\"Register\")}\n                  </button>\n                </Link>\n              </li>\n            </div>\n          )}\n        </nav>\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={\"/\"} component={Home} />\n            <Route exact path={\"/:id\"} component={Home} />\n            <Route exact path=\"/app/login\" component={Login} />\n            <Route exact path=\"/app/login/:id\" component={Login} />\n            <Route exact path=\"/app/register/:id\" component={Register} />\n            <Route exact path=\"/app/register\" component={Register} />\n            <Route exact path=\"/app/profile\" component={Profile} />\n            <Route path=\"/app/user\" component={BoardUser} />\n            <Route path=\"/app/mod\" component={BoardModerator} />\n            <Route path=\"/app/admin\" component={BoardAdmin} />\n            <Route path=\"/app/add-tasting\" component={NewExperience} />\n            <Route path=\"/app/edit-profile\" component={EditProfile} />\n            <Route path=\"/app/single-tasting\" component={SingleExperience} />\n            <Route path=\"/app/forgot-password\" component={ForgotPassword} />\n            <Route\n              exact\n              path=\"/app/update-password\"\n              component={UpdatePassword}\n            />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withTranslation()(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { I18nextProvider } from \"react-i18next\";\nimport i18next from \"i18next\";\nimport i18n from \"./i18n\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <I18nextProvider i18n={i18n}>\n      <App />\n    </I18nextProvider>\n    ,\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}