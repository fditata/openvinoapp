{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://165.232.157.193:3000/explorer/#/UserController/UserController.\";\n\nclass AuthService {\n  login(username, password) {\n    return axios.post(API_URL + \"signin\", {\n      username,\n      password\n    }).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password, firstName, lastName, address, birthDate, telegramId, walletAddress) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password,\n      firstName,\n      lastName,\n      address,\n      birthDate,\n      telegramId,\n      walletAddress\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n    ;\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["/Users/fab/Documents/cryptodev/react-jwt-auth/src/services/auth.service.js"],"names":["axios","API_URL","AuthService","login","username","password","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","register","email","firstName","lastName","address","birthDate","telegramId","walletAddress","getCurrentUser","parse","getItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,uEAAhB;;AAEA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAqB;AACxB,WAAOL,KAAK,CACTM,IADI,CACCL,OAAO,GAAG,QADX,EACqB;AACxBG,MAAAA,QADwB;AAExBC,MAAAA;AAFwB,KADrB,EAKJE,IALI,CAKCC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,EAA+B;AAC7BC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACC,IAAxB,CAA7B;AACD;;AAED,aAAOD,QAAQ,CAACC,IAAhB;AACD,KAXI,CAAP;AAYD;;AAEDM,EAAAA,MAAM,GAAG;AACPJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,MAAxB;AACD;;AAEDC,EAAAA,QAAQ,CAACb,QAAD,EAAWc,KAAX,EAAkBb,QAAlB,EAA4Bc,SAA5B,EAAuCC,QAAvC,EAAiDC,OAAjD,EAA0DC,SAA1D,EAAqEC,UAArE,EAAiFC,aAAjF,EAAgG;AACtG,WAAOxB,KAAK,CAACM,IAAN,CAAWL,OAAO,GAAG,QAArB,EAA+B;AACpCG,MAAAA,QADoC;AAEpCc,MAAAA,KAFoC;AAGpCb,MAAAA,QAHoC;AAIpCc,MAAAA,SAJoC;AAKpCC,MAAAA,QALoC;AAMpCC,MAAAA,OANoC;AAOpCC,MAAAA,SAPoC;AAQpCC,MAAAA,UARoC;AASpCC,MAAAA;AAToC,KAA/B,CAAP;AAWD;;AAEDC,EAAAA,cAAc,GAAG;AACf,WAAOZ,IAAI,CAACa,KAAL,CAAWf,YAAY,CAACgB,OAAb,CAAqB,MAArB,CAAX,CAAP;AAAgD;AACjD;;AApCe;;AAuClB,eAAe,IAAIzB,WAAJ,EAAf","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://165.232.157.193:3000/explorer/#/UserController/UserController.\";\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", {\n        username,\n        password\n      })\n      .then(response => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password, firstName, lastName, address, birthDate, telegramId, walletAddress) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password,\n      firstName,\n      lastName,\n      address,\n      birthDate,\n      telegramId,\n      walletAddress\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n}\n\nexport default new AuthService();\n"]},"metadata":{},"sourceType":"module"}